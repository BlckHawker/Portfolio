{
    "Projects": [
        {
            "Title": "Solver",
            "Date": "February 2019 - April 2022",
            "Tools": [
                "C#",
                "Visual Studio",
                "Windows Forms"
            ],
            "Description": 
                "When I first was introduced to the modding community of KTANE, I wanted to create solvers of modules other people created given some information from the bomb. The program requries the user to have the bomb running with the program right next to it. The program then asks for edgework from the bomb, and which module the user wants to be solved. Depending on the module, the user will need to type in information from that module that for program asks for. This is when I was first learning how to program. I used the manual as instructions of how the program should work, and used Windows Forms to create GUIs for the user to input the needed information to get the correct answer."
            ,
            "Links": [
                {
                    "Name": "Latest Build",
                    "Link": "https://github.com/KTANE-Solver/KTANE-Solver/releases"
                },
                {
                    "Name": "Documentation",
                    "Link": "https://www.youtube.com/playlist?list=PLR_AbBaKlWBgDyX3Wpq8omdWbtuthDlpL"
                }
            ],
            "Image": {
                "src": "img/KTANE Solver.gif",
                "alt": "KTANE Solcer Demostration"
            }
        },
        {
            "Title": "Mods",
            "Date": "January 2023 - Present",
            "Tools": [
                "C#",
                "HTML",
                "CSS",
                "Javascript",
                "Unity",
                "Visual Studio",
                "Visual Studio Code",
                "Inkscape"
            ],
            "Description": 
                "After a few years of creating solvers of KTANE mods, I decided to create some mods of my own. Not only did I have to write the logic of solving the mod, I also had to write the instructions, model it, and write the logic for interactions. I like creating mods more than creating solvers since it gives me more freedom in terms of creativity. The modding community also has a sub group on Twitch, mostly known as “Twitch Plays”, where players can go to a Twitch channel and play the game through chat commands. There is a special command called “force solve” where the module solves itself. Although it’s unnecessary, most modders implement this by having the module figuring out the calculations itself and pressing its own buttons to solve it. I add Twitch Plays support to all my mods because I want to make my modules accessible to everyone, even those who don't own the game and can only play through Twitch. It's also a decent challenge development wise."
            ,
            "Links": [
                {
                    "Name": "Demonstration",
                    "Link": "https://youtu.be/mpoavDU5cQQ"
                },
                {
                    "Name": "Steam Workshop",
                    "Link": "https://steamcommunity.com/profiles/76561198218564439/myworkshopfiles/"
                }
            ],
            "Image": {
                "src": "img/Steam Workshop.png",
                "alt": "Steam Workshop"
            }
        },
        {
            "Title": "Souvenir",
            "Date": "July 2023 - January 2024",
            "Tools": [
                "C#",
                "Unity",
                "Visual Studio Code"
            ],
            "Links": [
                {
                    "Name": "Demonstration",
                    "Link": "https://www.youtube.com/watch?v=g8pATKCpfsQ&ab_channel=Hawker"
                }
            ],
            "Image": {
                "src": "img/Souvenir.png",
                "alt": "Souvenir preview image"
            },
            "Description": "<a href=\"https://github.com/Timwi/KtaneSouvenir\" target=\"_blank\">Souvenir</a> is a module that asks various questions about other modules. Since there are always new modules being created, there's always a supply to update the module with new questions. I have added souvenir support to 28 modules with a demonstration video shown below. These integrations have significantly honed my ability to interpret and enhance code across different standards and practices."
        }
    ],
    "LFA": [
        "4 Buttons",
        "Advanced Shapes and Colors",
        "Aquarium",
        "Baba is Who",
        "Bakery",
        "Bamboozled Again",
        "Bridges",
        "Character Slots",
        "Directional Button",
        "Discolored Squares",
        "Drive In Window",
        "Emoji",
        "Forget Them All",
        "Forget Us Not",
        "Langton's Anteater",
        "Logical Hexabuttons",
        "Not Murder",
        "Orientation Hypercube",
        "Overcooked",
        "Papyrus Tiles",
        "Reflection",
        "Robot Programming",
        "Scrutiny Squares",
        "Seeded Maze",
        "Shoddy Chess",
        "Simon Serves",
        "Simon Shrieks",
        "Techinical Buttons",
        "Tetravex",
        "The Arena",
        "Twister"
    ]
}